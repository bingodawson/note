 git push --set-upstream origin fix_bug_setpwd
 
 git commit   --amend        撤销上一次提交  并讲暂存区文件重新提交  ？？？？
 git reset  head  -- <file>
 git reset  版本号  -- <file>
 
 git log --oneline  可以看到你要恢复的版本号
 
 
 # 删除 untracked files
git clean -f
 
# 连 untracked 的目录也一起删掉
git clean -fd
 
# 连 gitignore 的untrack 文件/目录也一起删掉 （慎用，一般这个是用来删掉编译出来的 .o之类的文件用的）
git clean -xfd
 
# 在用上述 git clean 前，墙裂建议加上 -n 参数来先看看会删掉哪些文件，防止重要文件被误删
git clean -nxfd
git clean -nf
git clean -nfd


参考链接：https://www.cnblogs.com/hope-markup/p/6683522.html
如果你没有commit你的本地修改（甚至于你都没有通过git add追踪过这些文件，当他们被删除，git reset --hard对于这些没有被commit过也没有git add过的修改来说就是具有毁灭性的，destructive！！）

but，如果你幸运的是曾经通过git add命令追踪过这些文件，只是没有commit它们而已！那么试试git fsck --lost-found这个命令吧！然后你就可以在本地项目文件中路径为.git/lost-found/other（楼主亲自试验就是这个路径）中找到它们！！并且呢，这里面包含了所有的没有被commit（指定到某次commit）的文件，甚至可能还包括你每次git add的版本（version一词实在不知道在这里怎么翻译，姑且就认为是版本吧）！

使用git fsck --lost-found这个命令，通过.git/lost-found/other这个路径，你可以恢复任何你git add过的文件！再通过find .git/objects -type f | xargs ls -lt | sed 60q这个命令，你就可以找到最近被你add到本地仓库的60个文件，综上所述，希望对你有所帮助！


在git add命令下并不生成新的版本号，那么git reflog结果也不会有git add 添加的文件。
因此建议多用git commit，反正出错了可以回退版本。而git add只在暂存区起作用，不适合保存文件。


https://blog.csdn.net/u013252047/article/details/80230781
git log和 git reflog的比较

git stash相关用法：
https://www.cnblogs.com/zndxall/archive/2018/09/04/9586088.html


